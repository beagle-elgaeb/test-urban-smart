{"version":3,"sources":["components/Main.tsx","components/Profile.tsx","components/App.tsx","reportWebVitals.js","redux/defaultState.ts","redux/reducer.ts","redux/redux.ts","index.tsx"],"names":["Main","history","useHistory","dispatch","useDispatch","login","useSelector","state","password","loginInput","evt","type","data","name","target","value","MainContainer","Input","onChange","placeholder","Button","onClick","push","disabled","styled","div","input","button","Profile","isLogin","ProfileContainer","Title","h1","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","reducer","action","store","createStore","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"iOAoDeA,MA9Cf,WACE,IAAMC,EAAUC,cACVC,EAAWC,cAEXC,EAAQC,aAAY,SAACC,GAAD,OAAuBA,EAAMF,SACjDG,EAAWF,aAAY,SAACC,GAAD,OAAuBA,EAAMC,YAEpDC,EAAa,SAACC,GAClBP,EAAiB,CACfQ,KAAM,QACNC,KAAM,CAAEC,KAAMH,EAAII,OAAOD,KAA8BE,MAAOL,EAAII,OAAOC,UAS7E,OACE,eAACC,EAAD,WACE,cAACC,EAAD,CACEC,SAAUT,EACVM,MAAOV,GAAS,GAChBQ,KAAK,QACLF,KAAK,OACLQ,YAAY,UAEd,cAACF,EAAD,CACEC,SAAUT,EACVM,MAAOP,GAAY,GACnBK,KAAK,WACLF,KAAK,OACLQ,YAAY,aAEd,cAACC,EAAD,CACET,KAAK,SACLU,QAvBQ,WACZlB,EAAS,CAAEQ,KAAM,SACjBV,EAAQqB,KAAK,aAsBTC,WAAsB,gBAAVlB,GAAwC,WAAbG,GAHzC,uBAaAQ,EAAgBQ,IAAOC,IAAV,0EAAGD,CAAH,iGASbP,EAAQO,IAAOE,MAAV,kEAAGF,CAAH,mRAuBLJ,EAASI,IAAOG,OAAV,mEAAGH,CAAH,qNAII,qBAAGD,SAA2B,YAAc,gBAMjD,qBAAGA,SAA2B,QAAU,WCjFpCK,MAXf,WACE,IAAMvB,EAAQC,aAAY,SAACC,GAAD,OAAuBA,EAAMF,SACjDwB,EAAUvB,aAAY,SAACC,GAAD,OAAuBA,EAAMsB,WAEzD,OACE,cAACC,EAAD,UACE,cAACC,EAAD,UAAQF,EAAO,UAAMxB,GAAU,yJAO/ByB,EAAmBN,IAAOC,IAAV,gFAAGD,CAAH,iGAShBO,EAAQP,IAAOQ,GAAV,qEAAGR,CAAH,4DCZIS,MATf,WACE,OACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpC,IACjC,cAAC,IAAD,CAAOmC,KAAK,WAAWC,UAAWR,QCGzBS,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wBCDCQ,EANM,CACnBzC,MAAO,GACPG,SAAU,GACVqB,SAAS,GCYIkB,MAZf,WAAoE,IAAnDxC,EAAkD,uDAA1CuC,EAAcE,EAA4B,uCACjE,OAAQA,EAAOrC,MACb,IAAK,QACH,OAAO,2BAAKJ,GAAZ,kBAAoByC,EAAOpC,KAAKC,KAAOmC,EAAOpC,KAAKG,QACrD,IAAK,OACH,OAAO,2BAAKR,GAAZ,IAAmBsB,SAAS,IAE9B,QACE,OAAOtB,ICNE0C,EAFDC,YAAYH,GCO1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,oBAAzB,SACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINO,SAASC,eAAe,SAG1BpB,M","file":"static/js/main.d471114a.chunk.js","sourcesContent":["import { ChangeEvent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Action, ReduxState } from \"../redux/types\";\nimport styled from \"styled-components/macro\";\n\nfunction Main() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const login = useSelector((state: ReduxState) => state.login);\n  const password = useSelector((state: ReduxState) => state.password);\n\n  const loginInput = (evt: ChangeEvent<HTMLInputElement>) => {\n    dispatch<Action>({\n      type: \"INPUT\",\n      data: { name: evt.target.name as \"login\" | \"password\", value: evt.target.value },\n    });\n  };\n\n  const logIn = () => {\n    dispatch({ type: \"AUTH\" });\n    history.push(\"/profile\");\n  };\n\n  return (\n    <MainContainer>\n      <Input\n        onChange={loginInput}\n        value={login || \"\"}\n        name=\"login\"\n        type=\"text\"\n        placeholder=\"Login\"\n      />\n      <Input\n        onChange={loginInput}\n        value={password || \"\"}\n        name=\"password\"\n        type=\"text\"\n        placeholder=\"Password\"\n      />\n      <Button\n        type=\"button\"\n        onClick={logIn}\n        disabled={!(login === \"developer21\" && password === \"123456\")}\n      >\n        LogIn\n      </Button>\n    </MainContainer>\n  );\n}\n\nexport default Main;\n\nconst MainContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n`;\n\nconst Input = styled.input`\n  height: 33px;\n  width: 150px;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid Green;\n  border-radius: 6px;\n  outline: none;\n  font-size: 20px;\n  line-height: 22px;\n  color: Green;\n  cursor: pointer;\n  margin: 0 10px 0 0;\n\n  ::placeholder {\n    color: LightGreen;\n  }\n\n  :hover {\n    box-shadow: 1px 1px 5px Green;\n  }\n`;\n\nconst Button = styled.button`\n  height: 33px;\n  width: 100px;\n  box-sizing: border-box;\n  background: ${({ disabled }) => (disabled ? \"LightGray\" : \"LightGreen\")};\n  border: none;\n  border-radius: 6px;\n  outline: none;\n  font-size: 20px;\n  line-height: 22px;\n  color: ${({ disabled }) => (disabled ? \"White\" : \"Green\")};\n  cursor: pointer;\n  margin: 0;\n\n  :hover {\n    box-shadow: 1px 1px 5px Green;\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport styled from \"styled-components/macro\";\nimport { ReduxState } from \"../redux/types\";\n\nfunction Profile() {\n  const login = useSelector((state: ReduxState) => state.login);\n  const isLogin = useSelector((state: ReduxState) => state.isLogin);\n\n  return (\n    <ProfileContainer>\n      <Title>{isLogin ? `${login}` : \"Необходимо авторизоваться\"}</Title>\n    </ProfileContainer>\n  );\n}\n\nexport default Profile;\n\nconst ProfileContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n  line-height: 52px;\n  color: MediumVioletRed;\n`;\n","import { Route } from \"react-router-dom\";\n\nimport Main from \"./Main\";\nimport Profile from \"./Profile\";\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/profile\" component={Profile} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultState = {\n  login: \"\",\n  password: \"\",\n  isLogin: false,\n};\n\nexport default defaultState;","import defaultState from \"./defaultState\";\nimport { ReduxState, Action } from \"./types\";\n\nfunction reducer(state = defaultState, action: Action): ReduxState {\n  switch (action.type) {\n    case \"INPUT\":\n      return { ...state, [action.data.name]: action.data.value };\n    case \"AUTH\":\n      return { ...state, isLogin: true };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom';\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport store from \"./redux/redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}